<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd"
	default-autowire="byName" default-lazy-init="true">

	<description>Spring公共配置</description>

	<!-- 定义受环境影响易变的变量 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 数据库连接 -->
				<value>classpath:config/jdbc.properties</value>
				<value>classpath:log4j.properties</value>
				<value>classpath:config/mail.properties</value>
			</list>
		</property>
	</bean>

	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="i18n.messages" />
	</bean>

	<!-- 定义扫描bean的位置 -->
	<context:annotation-config />

	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.justinmobile" />

	<!-- 以静态变量保存ApplicationContext -->
	<bean class="com.justinmobile.core.utils.spring.SpringContextHolder" lazy-init="false" />

	<!-- 数据源定义,使用Apache DBCP 连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接数 -->
		<property name="initialSize" value="1" />
		<!-- 最大活动连接数 -->
		<property name="maxActive" value="50" />
		<!-- 最大空闲连接数 -->
		<property name="maxIdle" value="10" />
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="1" />
		<!-- 获取连接超时等待时间(毫秒) -->
		<property name="maxWait" value="10000" />
		<!-- 空闲池空闲连接激活线程的运行间隔时间（毫秒） -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 空闲池中空闲连接能够被激活前的最小空闲时间（毫秒） -->
		<property name="minEvictableIdleTimeMillis" value="10000" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<!-- 处理oracle lob类型的数据保存的问题 -->
	<bean id="oracleLobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler">
		<property name="nativeJdbcExtractor">
			<bean class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor" />
		</property>
	</bean>

	<!-- Hibernate配置 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 会自动根据java的命名规则加"_" -->
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">${hibernate.ehcache_config_file}</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.justinmobile.**.domain" />
		<property name="lobHandler" ref="oracleLobHandler" />
	</bean>

	<!-- 事务管理器配置, Hibernate单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<aop:aspectj-autoproxy />

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
	<property name="interceptors">
			<list>
				<bean class="com.justinmobile.log.interceptor.LogInterceptor">
					<property name="ignoreHandlers">
						<list>
							<value>query*</value>
							<value>list*</value>
							<value>get*</value>
							<value>show*</value>
							<value>view*</value>
							<value>index*</value>
							<value>load*</value>
							<value>check*</value>
							<value>report*</value>
						</list>
					</property>
					<property name="ignoreParameters">
						<list>
							<value>m</value><!-- 方法 -->
							<value>search_*</value><!-- 查询用 -->
							<value>mootoolsUnique</value><!-- 随机数 -->
							<value>t</value><!-- 随机数 -->
						</list>
					</property>
					<property name="noLoginActions">
						<list>
							<value>CustomerController.customerReg</value>
							<value>CustomerController.findPwdRequest</value>
						</list>
					</property>
					<property name="roleNames">
						<list>
							<value>SUPER_OPERATOR</value>
							<value>OPERATOR_CUSTOMER_SERVICE</value>
							<value>OPERATOR_AUDITOR</value>
							<value>SERVICE_PROVIDER</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->
			</list>
		</property>
	</bean>
	
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />

	<bean id="scp02ServiceLocal" class="com.justinmobile.tsm.cms2ac.security.scp02.Scp02ServiceLocal"
		lazy-init="false">
	</bean>
	

</beans>